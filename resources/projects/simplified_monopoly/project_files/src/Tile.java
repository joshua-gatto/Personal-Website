import java.util.*;
/**
 * The abstract Tile Class
 *
 * @author Joshua Gatto
 * @version 3.0
 * @since Nov 22nd, 2021
 */
public abstract class Tile implements java.io.Serializable {
    /**
     * The name of the tile.
     */
    private String name;

    /**
     * Constructor for a new tile.
     */
    public Tile(){
        this.name="";
    }

    /**
     * Constructor to create a tile that has a name.
     * @param name String, the name of the tile to be created.
     */
    public Tile(String name){
        this.name = name;
    }

    /**
     * Get the name of this tile.
     * @return String, this tile's name.
     */
    public String getName(){
        return this.name;
    }

    /**
     * Sets the tile name.
     * @param name String, the tile's name.
     */
    public void setName(String name){
        this.name = name;
    }

    /**
     * Checks to see if this property is the same as the property passed through the parameter.
     * @param o Object, to check if this is equivalent to this property.
     * @return boolean, return true if tile is equivalent to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Tile)) return false;
        Tile tile = (Tile) o;
        return name.equals(tile.name);
    }

    /**
     * This method returns the hashCode of an object.
     * @return int, generated by the hash algorithm
     */
    @Override
    public int hashCode() {
        return Objects.hash(name);
    }
}